// Generated by jextract

package com.sunya.netchdf.hdf5Clib.ffm;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct H5FD_splitter_vfd_config_t {
 *     int32_t magic;
 *     unsigned int version;
 *     hid_t rw_fapl_id;
 *     hid_t wo_fapl_id;
 *     char wo_path[4097];
 *     char log_file_path[4097];
 *     hbool_t ignore_wo_errs;
 * };
 * }
 */
public class H5FD_splitter_vfd_config_t {

    public static MemoryLayout $LAYOUT() {
        return constants$440.const$2;
    }
    public static VarHandle magic$VH() {
        return constants$440.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int32_t magic;
     * }
     */
    public static int magic$get(MemorySegment seg) {
        return (int)constants$440.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int32_t magic;
     * }
     */
    public static void magic$set(MemorySegment seg, int x) {
        constants$440.const$3.set(seg, x);
    }
    public static int magic$get(MemorySegment seg, long index) {
        return (int)constants$440.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void magic$set(MemorySegment seg, long index, int x) {
        constants$440.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle version$VH() {
        return constants$440.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int version;
     * }
     */
    public static int version$get(MemorySegment seg) {
        return (int)constants$440.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int version;
     * }
     */
    public static void version$set(MemorySegment seg, int x) {
        constants$440.const$4.set(seg, x);
    }
    public static int version$get(MemorySegment seg, long index) {
        return (int)constants$440.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void version$set(MemorySegment seg, long index, int x) {
        constants$440.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle rw_fapl_id$VH() {
        return constants$440.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * hid_t rw_fapl_id;
     * }
     */
    public static long rw_fapl_id$get(MemorySegment seg) {
        return (long)constants$440.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * hid_t rw_fapl_id;
     * }
     */
    public static void rw_fapl_id$set(MemorySegment seg, long x) {
        constants$440.const$5.set(seg, x);
    }
    public static long rw_fapl_id$get(MemorySegment seg, long index) {
        return (long)constants$440.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void rw_fapl_id$set(MemorySegment seg, long index, long x) {
        constants$440.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle wo_fapl_id$VH() {
        return constants$441.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * hid_t wo_fapl_id;
     * }
     */
    public static long wo_fapl_id$get(MemorySegment seg) {
        return (long)constants$441.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * hid_t wo_fapl_id;
     * }
     */
    public static void wo_fapl_id$set(MemorySegment seg, long x) {
        constants$441.const$0.set(seg, x);
    }
    public static long wo_fapl_id$get(MemorySegment seg, long index) {
        return (long)constants$441.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void wo_fapl_id$set(MemorySegment seg, long index, long x) {
        constants$441.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment wo_path$slice(MemorySegment seg) {
        return seg.asSlice(24, 4097);
    }
    public static MemorySegment log_file_path$slice(MemorySegment seg) {
        return seg.asSlice(4121, 4097);
    }
    public static VarHandle ignore_wo_errs$VH() {
        return constants$441.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * hbool_t ignore_wo_errs;
     * }
     */
    public static boolean ignore_wo_errs$get(MemorySegment seg) {
        return (boolean)constants$441.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * hbool_t ignore_wo_errs;
     * }
     */
    public static void ignore_wo_errs$set(MemorySegment seg, boolean x) {
        constants$441.const$1.set(seg, x);
    }
    public static boolean ignore_wo_errs$get(MemorySegment seg, long index) {
        return (boolean)constants$441.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void ignore_wo_errs$set(MemorySegment seg, long index, boolean x) {
        constants$441.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


