// Generated by jextract

package com.sunya.netchdf.hdf5Clib.ffm;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$26 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$26() {}
    static final VarHandle const$0 = constants$25.const$1.varHandle(MemoryLayout.PathElement.groupElement("mtime"));
    static final VarHandle const$1 = constants$25.const$1.varHandle(MemoryLayout.PathElement.groupElement("ctime"));
    static final VarHandle const$2 = constants$25.const$1.varHandle(MemoryLayout.PathElement.groupElement("btime"));
    static final VarHandle const$3 = constants$25.const$1.varHandle(MemoryLayout.PathElement.groupElement("num_attrs"));
    static final StructLayout const$4 = MemoryLayout.structLayout(
        MemoryLayout.structLayout(
            JAVA_INT.withName("version"),
            JAVA_INT.withName("nmesgs"),
            JAVA_INT.withName("nchunks"),
            JAVA_INT.withName("flags"),
            MemoryLayout.structLayout(
                JAVA_LONG.withName("total"),
                JAVA_LONG.withName("meta"),
                JAVA_LONG.withName("mesg"),
                JAVA_LONG.withName("free")
            ).withName("space"),
            MemoryLayout.structLayout(
                JAVA_LONG.withName("present"),
                JAVA_LONG.withName("shared")
            ).withName("mesg")
        ).withName("hdr"),
        MemoryLayout.structLayout(
            MemoryLayout.structLayout(
                JAVA_LONG.withName("index_size"),
                JAVA_LONG.withName("heap_size")
            ).withName("obj"),
            MemoryLayout.structLayout(
                JAVA_LONG.withName("index_size"),
                JAVA_LONG.withName("heap_size")
            ).withName("attr")
        ).withName("meta_size")
    ).withName("H5O_native_info_t");
    static final StructLayout const$5 = MemoryLayout.structLayout(
        MemoryLayout.structLayout(
            JAVA_LONG.withName("index_size"),
            JAVA_LONG.withName("heap_size")
        ).withName("obj"),
        MemoryLayout.structLayout(
            JAVA_LONG.withName("index_size"),
            JAVA_LONG.withName("heap_size")
        ).withName("attr")
    ).withName("");
}


