// Generated by jextract

package com.sunya.netchdf.hdf5Clib.ffm;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct {
 *     int version;
 *     H5L_type_t id;
 *     char* comment;
 *     H5L_create_func_t create_func;
 *     H5L_move_func_t move_func;
 *     H5L_copy_func_t copy_func;
 *     H5L_traverse_0_func_t trav_func;
 *     H5L_delete_func_t del_func;
 *     H5L_query_func_t query_func;
 * };
 * }
 */
public class H5L_class_0_t {

    public static MemoryLayout $LAYOUT() {
        return constants$388.const$0;
    }
    public static VarHandle version$VH() {
        return constants$390.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int version;
     * }
     */
    public static int version$get(MemorySegment seg) {
        return (int)constants$390.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int version;
     * }
     */
    public static void version$set(MemorySegment seg, int x) {
        constants$390.const$3.set(seg, x);
    }
    public static int version$get(MemorySegment seg, long index) {
        return (int)constants$390.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void version$set(MemorySegment seg, long index, int x) {
        constants$390.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle id$VH() {
        return constants$390.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * H5L_type_t id;
     * }
     */
    public static int id$get(MemorySegment seg) {
        return (int)constants$390.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * H5L_type_t id;
     * }
     */
    public static void id$set(MemorySegment seg, int x) {
        constants$390.const$4.set(seg, x);
    }
    public static int id$get(MemorySegment seg, long index) {
        return (int)constants$390.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void id$set(MemorySegment seg, long index, int x) {
        constants$390.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle comment$VH() {
        return constants$390.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* comment;
     * }
     */
    public static MemorySegment comment$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$390.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* comment;
     * }
     */
    public static void comment$set(MemorySegment seg, MemorySegment x) {
        constants$390.const$5.set(seg, x);
    }
    public static MemorySegment comment$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$390.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void comment$set(MemorySegment seg, long index, MemorySegment x) {
        constants$390.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle create_func$VH() {
        return constants$391.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * H5L_create_func_t create_func;
     * }
     */
    public static MemorySegment create_func$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$391.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * H5L_create_func_t create_func;
     * }
     */
    public static void create_func$set(MemorySegment seg, MemorySegment x) {
        constants$391.const$0.set(seg, x);
    }
    public static MemorySegment create_func$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$391.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void create_func$set(MemorySegment seg, long index, MemorySegment x) {
        constants$391.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static H5L_create_func_t create_func(MemorySegment segment, Arena scope) {
        return H5L_create_func_t.ofAddress(create_func$get(segment), scope);
    }
    public static VarHandle move_func$VH() {
        return constants$391.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * H5L_move_func_t move_func;
     * }
     */
    public static MemorySegment move_func$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$391.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * H5L_move_func_t move_func;
     * }
     */
    public static void move_func$set(MemorySegment seg, MemorySegment x) {
        constants$391.const$1.set(seg, x);
    }
    public static MemorySegment move_func$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$391.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void move_func$set(MemorySegment seg, long index, MemorySegment x) {
        constants$391.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static H5L_move_func_t move_func(MemorySegment segment, Arena scope) {
        return H5L_move_func_t.ofAddress(move_func$get(segment), scope);
    }
    public static VarHandle copy_func$VH() {
        return constants$391.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * H5L_copy_func_t copy_func;
     * }
     */
    public static MemorySegment copy_func$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$391.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * H5L_copy_func_t copy_func;
     * }
     */
    public static void copy_func$set(MemorySegment seg, MemorySegment x) {
        constants$391.const$2.set(seg, x);
    }
    public static MemorySegment copy_func$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$391.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void copy_func$set(MemorySegment seg, long index, MemorySegment x) {
        constants$391.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static H5L_copy_func_t copy_func(MemorySegment segment, Arena scope) {
        return H5L_copy_func_t.ofAddress(copy_func$get(segment), scope);
    }
    public static VarHandle trav_func$VH() {
        return constants$391.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * H5L_traverse_0_func_t trav_func;
     * }
     */
    public static MemorySegment trav_func$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$391.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * H5L_traverse_0_func_t trav_func;
     * }
     */
    public static void trav_func$set(MemorySegment seg, MemorySegment x) {
        constants$391.const$3.set(seg, x);
    }
    public static MemorySegment trav_func$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$391.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void trav_func$set(MemorySegment seg, long index, MemorySegment x) {
        constants$391.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static H5L_traverse_0_func_t trav_func(MemorySegment segment, Arena scope) {
        return H5L_traverse_0_func_t.ofAddress(trav_func$get(segment), scope);
    }
    public static VarHandle del_func$VH() {
        return constants$391.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * H5L_delete_func_t del_func;
     * }
     */
    public static MemorySegment del_func$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$391.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * H5L_delete_func_t del_func;
     * }
     */
    public static void del_func$set(MemorySegment seg, MemorySegment x) {
        constants$391.const$4.set(seg, x);
    }
    public static MemorySegment del_func$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$391.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void del_func$set(MemorySegment seg, long index, MemorySegment x) {
        constants$391.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static H5L_delete_func_t del_func(MemorySegment segment, Arena scope) {
        return H5L_delete_func_t.ofAddress(del_func$get(segment), scope);
    }
    public static VarHandle query_func$VH() {
        return constants$391.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * H5L_query_func_t query_func;
     * }
     */
    public static MemorySegment query_func$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$391.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * H5L_query_func_t query_func;
     * }
     */
    public static void query_func$set(MemorySegment seg, MemorySegment x) {
        constants$391.const$5.set(seg, x);
    }
    public static MemorySegment query_func$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$391.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void query_func$set(MemorySegment seg, long index, MemorySegment x) {
        constants$391.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static H5L_query_func_t query_func(MemorySegment segment, Arena scope) {
        return H5L_query_func_t.ofAddress(query_func$get(segment), scope);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


