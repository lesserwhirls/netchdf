// Generated by jextract

package com.sunya.netchdf.hdf5Clib.ffm;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * int (*H5T_conv_t)(long src_id,long dst_id,struct H5T_cdata_t* cdata,unsigned long nelmts,unsigned long buf_stride,unsigned long bkg_stride,void* buf,void* bkg,long dset_xfer_plist);
 * }
 */
public interface H5T_conv_t {

    int apply(long src_id, long dst_id, java.lang.foreign.MemorySegment cdata, long nelmts, long buf_stride, long bkg_stride, java.lang.foreign.MemorySegment buf, java.lang.foreign.MemorySegment bkg, long dset_xfer_plist);
    static MemorySegment allocate(H5T_conv_t fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$393.const$0, fi, constants$392.const$5, scope);
    }
    static H5T_conv_t ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (long _src_id, long _dst_id, java.lang.foreign.MemorySegment _cdata, long _nelmts, long _buf_stride, long _bkg_stride, java.lang.foreign.MemorySegment _buf, java.lang.foreign.MemorySegment _bkg, long _dset_xfer_plist) -> {
            try {
                return (int)constants$393.const$1.invokeExact(symbol, _src_id, _dst_id, _cdata, _nelmts, _buf_stride, _bkg_stride, _buf, _bkg, _dset_xfer_plist);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


