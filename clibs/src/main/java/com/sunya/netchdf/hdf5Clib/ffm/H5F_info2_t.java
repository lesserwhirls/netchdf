// Generated by jextract

package com.sunya.netchdf.hdf5Clib.ffm;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct H5F_info2_t {
 *     struct  super;
 *     struct  free;
 *     struct  sohm;
 * };
 * }
 */
public class H5F_info2_t {

    public static MemoryLayout $LAYOUT() {
        return constants$172.const$0;
    }
    /**
     * {@snippet :
     * struct {
     *     unsigned int version;
     *     hsize_t super_size;
     *     hsize_t super_ext_size;
     * };
     * }
     */
    public static final class super_ {

        // Suppresses default constructor, ensuring non-instantiability.
        private super_() {}
        public static MemoryLayout $LAYOUT() {
            return constants$172.const$1;
        }
        public static VarHandle version$VH() {
            return constants$172.const$2;
        }
        /**
         * Getter for field:
         * {@snippet :
         * unsigned int version;
         * }
         */
        public static int version$get(MemorySegment seg) {
            return (int)constants$172.const$2.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * unsigned int version;
         * }
         */
        public static void version$set(MemorySegment seg, int x) {
            constants$172.const$2.set(seg, x);
        }
        public static int version$get(MemorySegment seg, long index) {
            return (int)constants$172.const$2.get(seg.asSlice(index*sizeof()));
        }
        public static void version$set(MemorySegment seg, long index, int x) {
            constants$172.const$2.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle super_size$VH() {
            return constants$172.const$3;
        }
        /**
         * Getter for field:
         * {@snippet :
         * hsize_t super_size;
         * }
         */
        public static long super_size$get(MemorySegment seg) {
            return (long)constants$172.const$3.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * hsize_t super_size;
         * }
         */
        public static void super_size$set(MemorySegment seg, long x) {
            constants$172.const$3.set(seg, x);
        }
        public static long super_size$get(MemorySegment seg, long index) {
            return (long)constants$172.const$3.get(seg.asSlice(index*sizeof()));
        }
        public static void super_size$set(MemorySegment seg, long index, long x) {
            constants$172.const$3.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle super_ext_size$VH() {
            return constants$172.const$4;
        }
        /**
         * Getter for field:
         * {@snippet :
         * hsize_t super_ext_size;
         * }
         */
        public static long super_ext_size$get(MemorySegment seg) {
            return (long)constants$172.const$4.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * hsize_t super_ext_size;
         * }
         */
        public static void super_ext_size$set(MemorySegment seg, long x) {
            constants$172.const$4.set(seg, x);
        }
        public static long super_ext_size$get(MemorySegment seg, long index) {
            return (long)constants$172.const$4.get(seg.asSlice(index*sizeof()));
        }
        public static void super_ext_size$set(MemorySegment seg, long index, long x) {
            constants$172.const$4.set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
        public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
            return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
        }
        public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
    }

    public static MemorySegment super_$slice(MemorySegment seg) {
        return seg.asSlice(0, 24);
    }
    /**
     * {@snippet :
     * struct {
     *     unsigned int version;
     *     hsize_t meta_size;
     *     hsize_t tot_space;
     * };
     * }
     */
    public static final class free {

        // Suppresses default constructor, ensuring non-instantiability.
        private free() {}
        public static MemoryLayout $LAYOUT() {
            return constants$172.const$5;
        }
        public static VarHandle version$VH() {
            return constants$173.const$0;
        }
        /**
         * Getter for field:
         * {@snippet :
         * unsigned int version;
         * }
         */
        public static int version$get(MemorySegment seg) {
            return (int)constants$173.const$0.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * unsigned int version;
         * }
         */
        public static void version$set(MemorySegment seg, int x) {
            constants$173.const$0.set(seg, x);
        }
        public static int version$get(MemorySegment seg, long index) {
            return (int)constants$173.const$0.get(seg.asSlice(index*sizeof()));
        }
        public static void version$set(MemorySegment seg, long index, int x) {
            constants$173.const$0.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle meta_size$VH() {
            return constants$173.const$1;
        }
        /**
         * Getter for field:
         * {@snippet :
         * hsize_t meta_size;
         * }
         */
        public static long meta_size$get(MemorySegment seg) {
            return (long)constants$173.const$1.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * hsize_t meta_size;
         * }
         */
        public static void meta_size$set(MemorySegment seg, long x) {
            constants$173.const$1.set(seg, x);
        }
        public static long meta_size$get(MemorySegment seg, long index) {
            return (long)constants$173.const$1.get(seg.asSlice(index*sizeof()));
        }
        public static void meta_size$set(MemorySegment seg, long index, long x) {
            constants$173.const$1.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle tot_space$VH() {
            return constants$173.const$2;
        }
        /**
         * Getter for field:
         * {@snippet :
         * hsize_t tot_space;
         * }
         */
        public static long tot_space$get(MemorySegment seg) {
            return (long)constants$173.const$2.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * hsize_t tot_space;
         * }
         */
        public static void tot_space$set(MemorySegment seg, long x) {
            constants$173.const$2.set(seg, x);
        }
        public static long tot_space$get(MemorySegment seg, long index) {
            return (long)constants$173.const$2.get(seg.asSlice(index*sizeof()));
        }
        public static void tot_space$set(MemorySegment seg, long index, long x) {
            constants$173.const$2.set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
        public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
            return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
        }
        public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
    }

    public static MemorySegment free$slice(MemorySegment seg) {
        return seg.asSlice(24, 24);
    }
    /**
     * {@snippet :
     * struct {
     *     unsigned int version;
     *     hsize_t hdr_size;
     *     H5_ih_info_t msgs_info;
     * };
     * }
     */
    public static final class sohm {

        // Suppresses default constructor, ensuring non-instantiability.
        private sohm() {}
        public static MemoryLayout $LAYOUT() {
            return constants$173.const$3;
        }
        public static VarHandle version$VH() {
            return constants$173.const$4;
        }
        /**
         * Getter for field:
         * {@snippet :
         * unsigned int version;
         * }
         */
        public static int version$get(MemorySegment seg) {
            return (int)constants$173.const$4.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * unsigned int version;
         * }
         */
        public static void version$set(MemorySegment seg, int x) {
            constants$173.const$4.set(seg, x);
        }
        public static int version$get(MemorySegment seg, long index) {
            return (int)constants$173.const$4.get(seg.asSlice(index*sizeof()));
        }
        public static void version$set(MemorySegment seg, long index, int x) {
            constants$173.const$4.set(seg.asSlice(index*sizeof()), x);
        }
        public static VarHandle hdr_size$VH() {
            return constants$173.const$5;
        }
        /**
         * Getter for field:
         * {@snippet :
         * hsize_t hdr_size;
         * }
         */
        public static long hdr_size$get(MemorySegment seg) {
            return (long)constants$173.const$5.get(seg);
        }
        /**
         * Setter for field:
         * {@snippet :
         * hsize_t hdr_size;
         * }
         */
        public static void hdr_size$set(MemorySegment seg, long x) {
            constants$173.const$5.set(seg, x);
        }
        public static long hdr_size$get(MemorySegment seg, long index) {
            return (long)constants$173.const$5.get(seg.asSlice(index*sizeof()));
        }
        public static void hdr_size$set(MemorySegment seg, long index, long x) {
            constants$173.const$5.set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment msgs_info$slice(MemorySegment seg) {
            return seg.asSlice(16, 16);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
        public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
            return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
        }
        public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
    }

    public static MemorySegment sohm$slice(MemorySegment seg) {
        return seg.asSlice(48, 32);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


