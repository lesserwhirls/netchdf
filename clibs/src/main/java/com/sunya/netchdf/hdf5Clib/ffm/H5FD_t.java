// Generated by jextract

package com.sunya.netchdf.hdf5Clib.ffm;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct H5FD_t {
 *     hid_t driver_id;
 *     const H5FD_class_t* cls;
 *     unsigned long fileno;
 *     unsigned int access_flags;
 *     unsigned long feature_flags;
 *     haddr_t maxaddr;
 *     haddr_t base_addr;
 *     hsize_t threshold;
 *     hsize_t alignment;
 *     hbool_t paged_aggr;
 * };
 * }
 */
public class H5FD_t {

    public static MemoryLayout $LAYOUT() {
        return constants$377.const$4;
    }
    public static VarHandle driver_id$VH() {
        return constants$377.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * hid_t driver_id;
     * }
     */
    public static long driver_id$get(MemorySegment seg) {
        return (long)constants$377.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * hid_t driver_id;
     * }
     */
    public static void driver_id$set(MemorySegment seg, long x) {
        constants$377.const$5.set(seg, x);
    }
    public static long driver_id$get(MemorySegment seg, long index) {
        return (long)constants$377.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void driver_id$set(MemorySegment seg, long index, long x) {
        constants$377.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle cls$VH() {
        return constants$378.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * const H5FD_class_t* cls;
     * }
     */
    public static MemorySegment cls$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$378.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * const H5FD_class_t* cls;
     * }
     */
    public static void cls$set(MemorySegment seg, MemorySegment x) {
        constants$378.const$0.set(seg, x);
    }
    public static MemorySegment cls$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$378.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void cls$set(MemorySegment seg, long index, MemorySegment x) {
        constants$378.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle fileno$VH() {
        return constants$378.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned long fileno;
     * }
     */
    public static long fileno$get(MemorySegment seg) {
        return (long)constants$378.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned long fileno;
     * }
     */
    public static void fileno$set(MemorySegment seg, long x) {
        constants$378.const$1.set(seg, x);
    }
    public static long fileno$get(MemorySegment seg, long index) {
        return (long)constants$378.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void fileno$set(MemorySegment seg, long index, long x) {
        constants$378.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle access_flags$VH() {
        return constants$378.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int access_flags;
     * }
     */
    public static int access_flags$get(MemorySegment seg) {
        return (int)constants$378.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int access_flags;
     * }
     */
    public static void access_flags$set(MemorySegment seg, int x) {
        constants$378.const$2.set(seg, x);
    }
    public static int access_flags$get(MemorySegment seg, long index) {
        return (int)constants$378.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void access_flags$set(MemorySegment seg, long index, int x) {
        constants$378.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle feature_flags$VH() {
        return constants$378.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned long feature_flags;
     * }
     */
    public static long feature_flags$get(MemorySegment seg) {
        return (long)constants$378.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned long feature_flags;
     * }
     */
    public static void feature_flags$set(MemorySegment seg, long x) {
        constants$378.const$3.set(seg, x);
    }
    public static long feature_flags$get(MemorySegment seg, long index) {
        return (long)constants$378.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void feature_flags$set(MemorySegment seg, long index, long x) {
        constants$378.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maxaddr$VH() {
        return constants$378.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * haddr_t maxaddr;
     * }
     */
    public static long maxaddr$get(MemorySegment seg) {
        return (long)constants$378.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * haddr_t maxaddr;
     * }
     */
    public static void maxaddr$set(MemorySegment seg, long x) {
        constants$378.const$4.set(seg, x);
    }
    public static long maxaddr$get(MemorySegment seg, long index) {
        return (long)constants$378.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void maxaddr$set(MemorySegment seg, long index, long x) {
        constants$378.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle base_addr$VH() {
        return constants$378.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * haddr_t base_addr;
     * }
     */
    public static long base_addr$get(MemorySegment seg) {
        return (long)constants$378.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * haddr_t base_addr;
     * }
     */
    public static void base_addr$set(MemorySegment seg, long x) {
        constants$378.const$5.set(seg, x);
    }
    public static long base_addr$get(MemorySegment seg, long index) {
        return (long)constants$378.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void base_addr$set(MemorySegment seg, long index, long x) {
        constants$378.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle threshold$VH() {
        return constants$379.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * hsize_t threshold;
     * }
     */
    public static long threshold$get(MemorySegment seg) {
        return (long)constants$379.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * hsize_t threshold;
     * }
     */
    public static void threshold$set(MemorySegment seg, long x) {
        constants$379.const$0.set(seg, x);
    }
    public static long threshold$get(MemorySegment seg, long index) {
        return (long)constants$379.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void threshold$set(MemorySegment seg, long index, long x) {
        constants$379.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle alignment$VH() {
        return constants$379.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * hsize_t alignment;
     * }
     */
    public static long alignment$get(MemorySegment seg) {
        return (long)constants$379.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * hsize_t alignment;
     * }
     */
    public static void alignment$set(MemorySegment seg, long x) {
        constants$379.const$1.set(seg, x);
    }
    public static long alignment$get(MemorySegment seg, long index) {
        return (long)constants$379.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void alignment$set(MemorySegment seg, long index, long x) {
        constants$379.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle paged_aggr$VH() {
        return constants$379.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * hbool_t paged_aggr;
     * }
     */
    public static boolean paged_aggr$get(MemorySegment seg) {
        return (boolean)constants$379.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * hbool_t paged_aggr;
     * }
     */
    public static void paged_aggr$set(MemorySegment seg, boolean x) {
        constants$379.const$2.set(seg, x);
    }
    public static boolean paged_aggr$get(MemorySegment seg, long index) {
        return (boolean)constants$379.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void paged_aggr$set(MemorySegment seg, long index, boolean x) {
        constants$379.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


