// Generated by jextract

package com.sunya.netchdf.hdf5Clib.ffm;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct H5E_error2_t {
 *     hid_t cls_id;
 *     hid_t maj_num;
 *     hid_t min_num;
 *     unsigned int line;
 *     char* func_name;
 *     char* file_name;
 *     char* desc;
 * };
 * }
 */
public class H5E_error2_t {

    public static MemoryLayout $LAYOUT() {
        return constants$126.const$3;
    }
    public static VarHandle cls_id$VH() {
        return constants$126.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * hid_t cls_id;
     * }
     */
    public static long cls_id$get(MemorySegment seg) {
        return (long)constants$126.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * hid_t cls_id;
     * }
     */
    public static void cls_id$set(MemorySegment seg, long x) {
        constants$126.const$4.set(seg, x);
    }
    public static long cls_id$get(MemorySegment seg, long index) {
        return (long)constants$126.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void cls_id$set(MemorySegment seg, long index, long x) {
        constants$126.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle maj_num$VH() {
        return constants$126.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * hid_t maj_num;
     * }
     */
    public static long maj_num$get(MemorySegment seg) {
        return (long)constants$126.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * hid_t maj_num;
     * }
     */
    public static void maj_num$set(MemorySegment seg, long x) {
        constants$126.const$5.set(seg, x);
    }
    public static long maj_num$get(MemorySegment seg, long index) {
        return (long)constants$126.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void maj_num$set(MemorySegment seg, long index, long x) {
        constants$126.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle min_num$VH() {
        return constants$127.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * hid_t min_num;
     * }
     */
    public static long min_num$get(MemorySegment seg) {
        return (long)constants$127.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * hid_t min_num;
     * }
     */
    public static void min_num$set(MemorySegment seg, long x) {
        constants$127.const$0.set(seg, x);
    }
    public static long min_num$get(MemorySegment seg, long index) {
        return (long)constants$127.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void min_num$set(MemorySegment seg, long index, long x) {
        constants$127.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle line$VH() {
        return constants$127.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int line;
     * }
     */
    public static int line$get(MemorySegment seg) {
        return (int)constants$127.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int line;
     * }
     */
    public static void line$set(MemorySegment seg, int x) {
        constants$127.const$1.set(seg, x);
    }
    public static int line$get(MemorySegment seg, long index) {
        return (int)constants$127.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void line$set(MemorySegment seg, long index, int x) {
        constants$127.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle func_name$VH() {
        return constants$127.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* func_name;
     * }
     */
    public static MemorySegment func_name$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$127.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* func_name;
     * }
     */
    public static void func_name$set(MemorySegment seg, MemorySegment x) {
        constants$127.const$2.set(seg, x);
    }
    public static MemorySegment func_name$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$127.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void func_name$set(MemorySegment seg, long index, MemorySegment x) {
        constants$127.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle file_name$VH() {
        return constants$127.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* file_name;
     * }
     */
    public static MemorySegment file_name$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$127.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* file_name;
     * }
     */
    public static void file_name$set(MemorySegment seg, MemorySegment x) {
        constants$127.const$3.set(seg, x);
    }
    public static MemorySegment file_name$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$127.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void file_name$set(MemorySegment seg, long index, MemorySegment x) {
        constants$127.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle desc$VH() {
        return constants$127.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* desc;
     * }
     */
    public static MemorySegment desc$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$127.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* desc;
     * }
     */
    public static void desc$set(MemorySegment seg, MemorySegment x) {
        constants$127.const$4.set(seg, x);
    }
    public static MemorySegment desc$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$127.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void desc$set(MemorySegment seg, long index, MemorySegment x) {
        constants$127.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


