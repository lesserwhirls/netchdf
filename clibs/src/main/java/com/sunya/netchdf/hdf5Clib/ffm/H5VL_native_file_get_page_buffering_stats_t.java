// Generated by jextract

package com.sunya.netchdf.hdf5Clib.ffm;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct H5VL_native_file_get_page_buffering_stats_t {
 *     unsigned int* accesses;
 *     unsigned int* hits;
 *     unsigned int* misses;
 *     unsigned int* evictions;
 *     unsigned int* bypasses;
 * };
 * }
 */
public class H5VL_native_file_get_page_buffering_stats_t {

    public static MemoryLayout $LAYOUT() {
        return constants$426.const$5;
    }
    public static VarHandle accesses$VH() {
        return constants$427.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int* accesses;
     * }
     */
    public static MemorySegment accesses$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$427.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int* accesses;
     * }
     */
    public static void accesses$set(MemorySegment seg, MemorySegment x) {
        constants$427.const$0.set(seg, x);
    }
    public static MemorySegment accesses$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$427.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void accesses$set(MemorySegment seg, long index, MemorySegment x) {
        constants$427.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle hits$VH() {
        return constants$427.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int* hits;
     * }
     */
    public static MemorySegment hits$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$427.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int* hits;
     * }
     */
    public static void hits$set(MemorySegment seg, MemorySegment x) {
        constants$427.const$1.set(seg, x);
    }
    public static MemorySegment hits$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$427.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void hits$set(MemorySegment seg, long index, MemorySegment x) {
        constants$427.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle misses$VH() {
        return constants$427.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int* misses;
     * }
     */
    public static MemorySegment misses$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$427.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int* misses;
     * }
     */
    public static void misses$set(MemorySegment seg, MemorySegment x) {
        constants$427.const$2.set(seg, x);
    }
    public static MemorySegment misses$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$427.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void misses$set(MemorySegment seg, long index, MemorySegment x) {
        constants$427.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle evictions$VH() {
        return constants$427.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int* evictions;
     * }
     */
    public static MemorySegment evictions$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$427.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int* evictions;
     * }
     */
    public static void evictions$set(MemorySegment seg, MemorySegment x) {
        constants$427.const$3.set(seg, x);
    }
    public static MemorySegment evictions$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$427.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void evictions$set(MemorySegment seg, long index, MemorySegment x) {
        constants$427.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle bypasses$VH() {
        return constants$427.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int* bypasses;
     * }
     */
    public static MemorySegment bypasses$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$427.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int* bypasses;
     * }
     */
    public static void bypasses$set(MemorySegment seg, MemorySegment x) {
        constants$427.const$4.set(seg, x);
    }
    public static MemorySegment bypasses$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$427.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void bypasses$set(MemorySegment seg, long index, MemorySegment x) {
        constants$427.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


