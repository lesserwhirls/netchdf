// Generated by jextract

package com.sunya.netchdf.hdf5Clib.ffm;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct H5ES_err_info_t {
 *     char* api_name;
 *     char* api_args;
 *     char* app_file_name;
 *     char* app_func_name;
 *     unsigned int app_line_num;
 *     uint64_t op_ins_count;
 *     uint64_t op_ins_ts;
 *     uint64_t op_exec_ts;
 *     uint64_t op_exec_time;
 *     hid_t err_stack_id;
 * };
 * }
 */
public class H5ES_err_info_t {

    public static MemoryLayout $LAYOUT() {
        return constants$167.const$3;
    }
    public static VarHandle api_name$VH() {
        return constants$167.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* api_name;
     * }
     */
    public static MemorySegment api_name$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$167.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* api_name;
     * }
     */
    public static void api_name$set(MemorySegment seg, MemorySegment x) {
        constants$167.const$4.set(seg, x);
    }
    public static MemorySegment api_name$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$167.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void api_name$set(MemorySegment seg, long index, MemorySegment x) {
        constants$167.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle api_args$VH() {
        return constants$167.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* api_args;
     * }
     */
    public static MemorySegment api_args$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$167.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* api_args;
     * }
     */
    public static void api_args$set(MemorySegment seg, MemorySegment x) {
        constants$167.const$5.set(seg, x);
    }
    public static MemorySegment api_args$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$167.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void api_args$set(MemorySegment seg, long index, MemorySegment x) {
        constants$167.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle app_file_name$VH() {
        return constants$168.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* app_file_name;
     * }
     */
    public static MemorySegment app_file_name$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$168.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* app_file_name;
     * }
     */
    public static void app_file_name$set(MemorySegment seg, MemorySegment x) {
        constants$168.const$0.set(seg, x);
    }
    public static MemorySegment app_file_name$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$168.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void app_file_name$set(MemorySegment seg, long index, MemorySegment x) {
        constants$168.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle app_func_name$VH() {
        return constants$168.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* app_func_name;
     * }
     */
    public static MemorySegment app_func_name$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$168.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* app_func_name;
     * }
     */
    public static void app_func_name$set(MemorySegment seg, MemorySegment x) {
        constants$168.const$1.set(seg, x);
    }
    public static MemorySegment app_func_name$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$168.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void app_func_name$set(MemorySegment seg, long index, MemorySegment x) {
        constants$168.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle app_line_num$VH() {
        return constants$168.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int app_line_num;
     * }
     */
    public static int app_line_num$get(MemorySegment seg) {
        return (int)constants$168.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int app_line_num;
     * }
     */
    public static void app_line_num$set(MemorySegment seg, int x) {
        constants$168.const$2.set(seg, x);
    }
    public static int app_line_num$get(MemorySegment seg, long index) {
        return (int)constants$168.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void app_line_num$set(MemorySegment seg, long index, int x) {
        constants$168.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle op_ins_count$VH() {
        return constants$168.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint64_t op_ins_count;
     * }
     */
    public static long op_ins_count$get(MemorySegment seg) {
        return (long)constants$168.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint64_t op_ins_count;
     * }
     */
    public static void op_ins_count$set(MemorySegment seg, long x) {
        constants$168.const$3.set(seg, x);
    }
    public static long op_ins_count$get(MemorySegment seg, long index) {
        return (long)constants$168.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void op_ins_count$set(MemorySegment seg, long index, long x) {
        constants$168.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle op_ins_ts$VH() {
        return constants$168.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint64_t op_ins_ts;
     * }
     */
    public static long op_ins_ts$get(MemorySegment seg) {
        return (long)constants$168.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint64_t op_ins_ts;
     * }
     */
    public static void op_ins_ts$set(MemorySegment seg, long x) {
        constants$168.const$4.set(seg, x);
    }
    public static long op_ins_ts$get(MemorySegment seg, long index) {
        return (long)constants$168.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void op_ins_ts$set(MemorySegment seg, long index, long x) {
        constants$168.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle op_exec_ts$VH() {
        return constants$168.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint64_t op_exec_ts;
     * }
     */
    public static long op_exec_ts$get(MemorySegment seg) {
        return (long)constants$168.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint64_t op_exec_ts;
     * }
     */
    public static void op_exec_ts$set(MemorySegment seg, long x) {
        constants$168.const$5.set(seg, x);
    }
    public static long op_exec_ts$get(MemorySegment seg, long index) {
        return (long)constants$168.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void op_exec_ts$set(MemorySegment seg, long index, long x) {
        constants$168.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle op_exec_time$VH() {
        return constants$169.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint64_t op_exec_time;
     * }
     */
    public static long op_exec_time$get(MemorySegment seg) {
        return (long)constants$169.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint64_t op_exec_time;
     * }
     */
    public static void op_exec_time$set(MemorySegment seg, long x) {
        constants$169.const$0.set(seg, x);
    }
    public static long op_exec_time$get(MemorySegment seg, long index) {
        return (long)constants$169.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void op_exec_time$set(MemorySegment seg, long index, long x) {
        constants$169.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle err_stack_id$VH() {
        return constants$169.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * hid_t err_stack_id;
     * }
     */
    public static long err_stack_id$get(MemorySegment seg) {
        return (long)constants$169.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * hid_t err_stack_id;
     * }
     */
    public static void err_stack_id$set(MemorySegment seg, long x) {
        constants$169.const$1.set(seg, x);
    }
    public static long err_stack_id$get(MemorySegment seg, long index) {
        return (long)constants$169.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void err_stack_id$set(MemorySegment seg, long index, long x) {
        constants$169.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


