// Generated by jextract

package com.sunya.netchdf.hdf5Clib.ffm;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$428 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$428() {}
    static final VarHandle const$0 = constants$427.const$5.varHandle(MemoryLayout.PathElement.groupElement("addr"));
    static final VarHandle const$1 = constants$427.const$5.varHandle(MemoryLayout.PathElement.groupElement("len"));
    static final StructLayout const$2 = MemoryLayout.structLayout(
        JAVA_INT.withName("low"),
        JAVA_INT.withName("high")
    ).withName("H5VL_native_file_set_libver_bounds_t");
    static final VarHandle const$3 = constants$428.const$2.varHandle(MemoryLayout.PathElement.groupElement("low"));
    static final VarHandle const$4 = constants$428.const$2.varHandle(MemoryLayout.PathElement.groupElement("high"));
    static final UnionLayout const$5 = MemoryLayout.unionLayout(
        MemoryLayout.structLayout(
            JAVA_LONG.withName("buf_size"),
            RuntimeHelper.POINTER.withName("buf"),
            RuntimeHelper.POINTER.withName("image_len")
        ).withName("get_file_image"),
        MemoryLayout.structLayout(
            JAVA_INT.withName("type"),
            MemoryLayout.paddingLayout(4),
            RuntimeHelper.POINTER.withName("sect_info"),
            JAVA_LONG.withName("nsects"),
            RuntimeHelper.POINTER.withName("sect_count")
        ).withName("get_free_sections"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("size")
        ).withName("get_freespace"),
        MemoryLayout.structLayout(
            JAVA_INT.withName("type"),
            MemoryLayout.paddingLayout(4),
            RuntimeHelper.POINTER.withName("finfo")
        ).withName("get_info"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("config")
        ).withName("get_mdc_config"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("hit_rate")
        ).withName("get_mdc_hit_rate"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("max_size"),
            RuntimeHelper.POINTER.withName("min_clean_size"),
            RuntimeHelper.POINTER.withName("cur_size"),
            RuntimeHelper.POINTER.withName("cur_num_entries")
        ).withName("get_mdc_size"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("size")
        ).withName("get_size"),
        MemoryLayout.structLayout(
            JAVA_LONG.withName("fapl_id"),
            RuntimeHelper.POINTER.withName("file_handle")
        ).withName("get_vfd_handle"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("config")
        ).withName("set_mdc_config"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("info")
        ).withName("get_metadata_read_retry_info"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("is_enabled"),
            RuntimeHelper.POINTER.withName("is_currently_logging")
        ).withName("get_mdc_logging_status"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("accesses"),
            RuntimeHelper.POINTER.withName("hits"),
            RuntimeHelper.POINTER.withName("misses"),
            RuntimeHelper.POINTER.withName("evictions"),
            RuntimeHelper.POINTER.withName("bypasses")
        ).withName("get_page_buffering_stats"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("addr"),
            RuntimeHelper.POINTER.withName("len")
        ).withName("get_mdc_image_info"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("eoa")
        ).withName("get_eoa"),
        MemoryLayout.structLayout(
            JAVA_LONG.withName("increment")
        ).withName("increment_filesize"),
        MemoryLayout.structLayout(
            JAVA_INT.withName("low"),
            JAVA_INT.withName("high")
        ).withName("set_libver_bounds"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("minimize")
        ).withName("get_min_dset_ohdr_flag"),
        MemoryLayout.structLayout(
            JAVA_BOOLEAN.withName("minimize")
        ).withName("set_min_dset_ohdr_flag")
    ).withName("H5VL_native_file_optional_args_t");
}


