// Generated by jextract

package com.sunya.netchdf.hdf5Clib.ffm;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$288 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$288() {}
    static final MethodHandle const$0 = RuntimeHelper.upcallHandle(H5VL_token_class_t.from_str.class, "apply", constants$287.const$2);
    static final VarHandle const$1 = constants$286.const$4.varHandle(MemoryLayout.PathElement.groupElement("from_str"));
    static final StructLayout const$2 = MemoryLayout.structLayout(
        JAVA_INT.withName("version"),
        JAVA_INT.withName("value"),
        RuntimeHelper.POINTER.withName("name"),
        JAVA_INT.withName("conn_version"),
        MemoryLayout.paddingLayout(4),
        JAVA_LONG.withName("cap_flags"),
        RuntimeHelper.POINTER.withName("initialize"),
        RuntimeHelper.POINTER.withName("terminate"),
        MemoryLayout.structLayout(
            JAVA_LONG.withName("size"),
            RuntimeHelper.POINTER.withName("copy"),
            RuntimeHelper.POINTER.withName("cmp"),
            RuntimeHelper.POINTER.withName("free"),
            RuntimeHelper.POINTER.withName("to_str"),
            RuntimeHelper.POINTER.withName("from_str")
        ).withName("info_cls"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("get_object"),
            RuntimeHelper.POINTER.withName("get_wrap_ctx"),
            RuntimeHelper.POINTER.withName("wrap_object"),
            RuntimeHelper.POINTER.withName("unwrap_object"),
            RuntimeHelper.POINTER.withName("free_wrap_ctx")
        ).withName("wrap_cls"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("create"),
            RuntimeHelper.POINTER.withName("open"),
            RuntimeHelper.POINTER.withName("read"),
            RuntimeHelper.POINTER.withName("write"),
            RuntimeHelper.POINTER.withName("get"),
            RuntimeHelper.POINTER.withName("specific"),
            RuntimeHelper.POINTER.withName("optional"),
            RuntimeHelper.POINTER.withName("close")
        ).withName("attr_cls"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("create"),
            RuntimeHelper.POINTER.withName("open"),
            RuntimeHelper.POINTER.withName("read"),
            RuntimeHelper.POINTER.withName("write"),
            RuntimeHelper.POINTER.withName("get"),
            RuntimeHelper.POINTER.withName("specific"),
            RuntimeHelper.POINTER.withName("optional"),
            RuntimeHelper.POINTER.withName("close")
        ).withName("dataset_cls"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("commit"),
            RuntimeHelper.POINTER.withName("open"),
            RuntimeHelper.POINTER.withName("get"),
            RuntimeHelper.POINTER.withName("specific"),
            RuntimeHelper.POINTER.withName("optional"),
            RuntimeHelper.POINTER.withName("close")
        ).withName("datatype_cls"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("create"),
            RuntimeHelper.POINTER.withName("open"),
            RuntimeHelper.POINTER.withName("get"),
            RuntimeHelper.POINTER.withName("specific"),
            RuntimeHelper.POINTER.withName("optional"),
            RuntimeHelper.POINTER.withName("close")
        ).withName("file_cls"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("create"),
            RuntimeHelper.POINTER.withName("open"),
            RuntimeHelper.POINTER.withName("get"),
            RuntimeHelper.POINTER.withName("specific"),
            RuntimeHelper.POINTER.withName("optional"),
            RuntimeHelper.POINTER.withName("close")
        ).withName("group_cls"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("create"),
            RuntimeHelper.POINTER.withName("copy"),
            RuntimeHelper.POINTER.withName("move"),
            RuntimeHelper.POINTER.withName("get"),
            RuntimeHelper.POINTER.withName("specific"),
            RuntimeHelper.POINTER.withName("optional")
        ).withName("link_cls"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("open"),
            RuntimeHelper.POINTER.withName("copy"),
            RuntimeHelper.POINTER.withName("get"),
            RuntimeHelper.POINTER.withName("specific"),
            RuntimeHelper.POINTER.withName("optional")
        ).withName("object_cls"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("get_conn_cls"),
            RuntimeHelper.POINTER.withName("get_cap_flags"),
            RuntimeHelper.POINTER.withName("opt_query")
        ).withName("introspect_cls"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("wait"),
            RuntimeHelper.POINTER.withName("notify"),
            RuntimeHelper.POINTER.withName("cancel"),
            RuntimeHelper.POINTER.withName("specific"),
            RuntimeHelper.POINTER.withName("optional"),
            RuntimeHelper.POINTER.withName("free")
        ).withName("request_cls"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("put"),
            RuntimeHelper.POINTER.withName("get"),
            RuntimeHelper.POINTER.withName("specific"),
            RuntimeHelper.POINTER.withName("optional")
        ).withName("blob_cls"),
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("cmp"),
            RuntimeHelper.POINTER.withName("to_str"),
            RuntimeHelper.POINTER.withName("from_str")
        ).withName("token_cls"),
        RuntimeHelper.POINTER.withName("optional")
    ).withName("H5VL_class_t");
    static final VarHandle const$3 = constants$288.const$2.varHandle(MemoryLayout.PathElement.groupElement("version"));
    static final VarHandle const$4 = constants$288.const$2.varHandle(MemoryLayout.PathElement.groupElement("value"));
    static final VarHandle const$5 = constants$288.const$2.varHandle(MemoryLayout.PathElement.groupElement("name"));
}


