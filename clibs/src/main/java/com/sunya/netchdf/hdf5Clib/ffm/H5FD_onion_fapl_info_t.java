// Generated by jextract

package com.sunya.netchdf.hdf5Clib.ffm;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct H5FD_onion_fapl_info_t {
 *     uint8_t version;
 *     hid_t backing_fapl_id;
 *     uint32_t page_size;
 *     H5FD_onion_target_file_constant_t store_target;
 *     uint64_t revision_num;
 *     uint8_t force_write_open;
 *     uint8_t creation_flags;
 *     char comment[256];
 * };
 * }
 */
public class H5FD_onion_fapl_info_t {

    public static MemoryLayout $LAYOUT() {
        return constants$438.const$0;
    }
    public static VarHandle version$VH() {
        return constants$438.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint8_t version;
     * }
     */
    public static byte version$get(MemorySegment seg) {
        return (byte)constants$438.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint8_t version;
     * }
     */
    public static void version$set(MemorySegment seg, byte x) {
        constants$438.const$1.set(seg, x);
    }
    public static byte version$get(MemorySegment seg, long index) {
        return (byte)constants$438.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void version$set(MemorySegment seg, long index, byte x) {
        constants$438.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle backing_fapl_id$VH() {
        return constants$438.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * hid_t backing_fapl_id;
     * }
     */
    public static long backing_fapl_id$get(MemorySegment seg) {
        return (long)constants$438.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * hid_t backing_fapl_id;
     * }
     */
    public static void backing_fapl_id$set(MemorySegment seg, long x) {
        constants$438.const$2.set(seg, x);
    }
    public static long backing_fapl_id$get(MemorySegment seg, long index) {
        return (long)constants$438.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void backing_fapl_id$set(MemorySegment seg, long index, long x) {
        constants$438.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle page_size$VH() {
        return constants$438.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t page_size;
     * }
     */
    public static int page_size$get(MemorySegment seg) {
        return (int)constants$438.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t page_size;
     * }
     */
    public static void page_size$set(MemorySegment seg, int x) {
        constants$438.const$3.set(seg, x);
    }
    public static int page_size$get(MemorySegment seg, long index) {
        return (int)constants$438.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void page_size$set(MemorySegment seg, long index, int x) {
        constants$438.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle store_target$VH() {
        return constants$438.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * H5FD_onion_target_file_constant_t store_target;
     * }
     */
    public static int store_target$get(MemorySegment seg) {
        return (int)constants$438.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * H5FD_onion_target_file_constant_t store_target;
     * }
     */
    public static void store_target$set(MemorySegment seg, int x) {
        constants$438.const$4.set(seg, x);
    }
    public static int store_target$get(MemorySegment seg, long index) {
        return (int)constants$438.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void store_target$set(MemorySegment seg, long index, int x) {
        constants$438.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle revision_num$VH() {
        return constants$438.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint64_t revision_num;
     * }
     */
    public static long revision_num$get(MemorySegment seg) {
        return (long)constants$438.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint64_t revision_num;
     * }
     */
    public static void revision_num$set(MemorySegment seg, long x) {
        constants$438.const$5.set(seg, x);
    }
    public static long revision_num$get(MemorySegment seg, long index) {
        return (long)constants$438.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void revision_num$set(MemorySegment seg, long index, long x) {
        constants$438.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle force_write_open$VH() {
        return constants$439.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint8_t force_write_open;
     * }
     */
    public static byte force_write_open$get(MemorySegment seg) {
        return (byte)constants$439.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint8_t force_write_open;
     * }
     */
    public static void force_write_open$set(MemorySegment seg, byte x) {
        constants$439.const$0.set(seg, x);
    }
    public static byte force_write_open$get(MemorySegment seg, long index) {
        return (byte)constants$439.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void force_write_open$set(MemorySegment seg, long index, byte x) {
        constants$439.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle creation_flags$VH() {
        return constants$439.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint8_t creation_flags;
     * }
     */
    public static byte creation_flags$get(MemorySegment seg) {
        return (byte)constants$439.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint8_t creation_flags;
     * }
     */
    public static void creation_flags$set(MemorySegment seg, byte x) {
        constants$439.const$1.set(seg, x);
    }
    public static byte creation_flags$get(MemorySegment seg, long index) {
        return (byte)constants$439.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void creation_flags$set(MemorySegment seg, long index, byte x) {
        constants$439.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment comment$slice(MemorySegment seg) {
        return seg.asSlice(34, 256);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


