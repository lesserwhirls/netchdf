// Generated by jextract

package com.sunya.netchdf.hdf5Clib.ffm;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct H5VL_loc_by_idx {
 *     char* name;
 *     H5_index_t idx_type;
 *     H5_iter_order_t order;
 *     hsize_t n;
 *     hid_t lapl_id;
 * };
 * }
 */
public class H5VL_loc_by_idx {

    public static MemoryLayout $LAYOUT() {
        return constants$217.const$0;
    }
    public static VarHandle name$VH() {
        return constants$217.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* name;
     * }
     */
    public static MemorySegment name$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$217.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* name;
     * }
     */
    public static void name$set(MemorySegment seg, MemorySegment x) {
        constants$217.const$1.set(seg, x);
    }
    public static MemorySegment name$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$217.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void name$set(MemorySegment seg, long index, MemorySegment x) {
        constants$217.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle idx_type$VH() {
        return constants$217.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * H5_index_t idx_type;
     * }
     */
    public static int idx_type$get(MemorySegment seg) {
        return (int)constants$217.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * H5_index_t idx_type;
     * }
     */
    public static void idx_type$set(MemorySegment seg, int x) {
        constants$217.const$2.set(seg, x);
    }
    public static int idx_type$get(MemorySegment seg, long index) {
        return (int)constants$217.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void idx_type$set(MemorySegment seg, long index, int x) {
        constants$217.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle order$VH() {
        return constants$217.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * H5_iter_order_t order;
     * }
     */
    public static int order$get(MemorySegment seg) {
        return (int)constants$217.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * H5_iter_order_t order;
     * }
     */
    public static void order$set(MemorySegment seg, int x) {
        constants$217.const$3.set(seg, x);
    }
    public static int order$get(MemorySegment seg, long index) {
        return (int)constants$217.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void order$set(MemorySegment seg, long index, int x) {
        constants$217.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle n$VH() {
        return constants$217.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * hsize_t n;
     * }
     */
    public static long n$get(MemorySegment seg) {
        return (long)constants$217.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * hsize_t n;
     * }
     */
    public static void n$set(MemorySegment seg, long x) {
        constants$217.const$4.set(seg, x);
    }
    public static long n$get(MemorySegment seg, long index) {
        return (long)constants$217.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void n$set(MemorySegment seg, long index, long x) {
        constants$217.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle lapl_id$VH() {
        return constants$217.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * hid_t lapl_id;
     * }
     */
    public static long lapl_id$get(MemorySegment seg) {
        return (long)constants$217.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * hid_t lapl_id;
     * }
     */
    public static void lapl_id$set(MemorySegment seg, long x) {
        constants$217.const$5.set(seg, x);
    }
    public static long lapl_id$get(MemorySegment seg, long index) {
        return (long)constants$217.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void lapl_id$set(MemorySegment seg, long index, long x) {
        constants$217.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


