// Generated by jextract

package com.sunya.netchdf.hdf5Clib.ffm;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct H5FD_ctl_memcpy_args_t {
 *     void* dstbuf;
 *     hsize_t dst_off;
 *     void* srcbuf;
 *     hsize_t src_off;
 *     size_t len;
 * };
 * }
 */
public class H5FD_ctl_memcpy_args_t {

    public static MemoryLayout $LAYOUT() {
        return constants$189.const$0;
    }
    public static VarHandle dstbuf$VH() {
        return constants$189.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* dstbuf;
     * }
     */
    public static MemorySegment dstbuf$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$189.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* dstbuf;
     * }
     */
    public static void dstbuf$set(MemorySegment seg, MemorySegment x) {
        constants$189.const$1.set(seg, x);
    }
    public static MemorySegment dstbuf$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$189.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void dstbuf$set(MemorySegment seg, long index, MemorySegment x) {
        constants$189.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle dst_off$VH() {
        return constants$189.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * hsize_t dst_off;
     * }
     */
    public static long dst_off$get(MemorySegment seg) {
        return (long)constants$189.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * hsize_t dst_off;
     * }
     */
    public static void dst_off$set(MemorySegment seg, long x) {
        constants$189.const$2.set(seg, x);
    }
    public static long dst_off$get(MemorySegment seg, long index) {
        return (long)constants$189.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void dst_off$set(MemorySegment seg, long index, long x) {
        constants$189.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle srcbuf$VH() {
        return constants$189.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* srcbuf;
     * }
     */
    public static MemorySegment srcbuf$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$189.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* srcbuf;
     * }
     */
    public static void srcbuf$set(MemorySegment seg, MemorySegment x) {
        constants$189.const$3.set(seg, x);
    }
    public static MemorySegment srcbuf$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$189.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void srcbuf$set(MemorySegment seg, long index, MemorySegment x) {
        constants$189.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle src_off$VH() {
        return constants$189.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * hsize_t src_off;
     * }
     */
    public static long src_off$get(MemorySegment seg) {
        return (long)constants$189.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * hsize_t src_off;
     * }
     */
    public static void src_off$set(MemorySegment seg, long x) {
        constants$189.const$4.set(seg, x);
    }
    public static long src_off$get(MemorySegment seg, long index) {
        return (long)constants$189.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void src_off$set(MemorySegment seg, long index, long x) {
        constants$189.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle len$VH() {
        return constants$189.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * size_t len;
     * }
     */
    public static long len$get(MemorySegment seg) {
        return (long)constants$189.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * size_t len;
     * }
     */
    public static void len$set(MemorySegment seg, long x) {
        constants$189.const$5.set(seg, x);
    }
    public static long len$get(MemorySegment seg, long index) {
        return (long)constants$189.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void len$set(MemorySegment seg, long index, long x) {
        constants$189.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


