// Generated by jextract

package com.sunya.netchdf.hdf5Clib.ffm;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct H5VL_native_group_iterate_old_t {
 *     H5VL_loc_params_t loc_params;
 *     hsize_t idx;
 *     hsize_t* last_obj;
 *     H5G_iterate_t op;
 *     void* op_data;
 * };
 * }
 */
public class H5VL_native_group_iterate_old_t {

    public static MemoryLayout $LAYOUT() {
        return constants$431.const$3;
    }
    public static MemorySegment loc_params$slice(MemorySegment seg) {
        return seg.asSlice(0, 40);
    }
    public static VarHandle idx$VH() {
        return constants$431.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * hsize_t idx;
     * }
     */
    public static long idx$get(MemorySegment seg) {
        return (long)constants$431.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * hsize_t idx;
     * }
     */
    public static void idx$set(MemorySegment seg, long x) {
        constants$431.const$4.set(seg, x);
    }
    public static long idx$get(MemorySegment seg, long index) {
        return (long)constants$431.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void idx$set(MemorySegment seg, long index, long x) {
        constants$431.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle last_obj$VH() {
        return constants$431.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * hsize_t* last_obj;
     * }
     */
    public static MemorySegment last_obj$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$431.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * hsize_t* last_obj;
     * }
     */
    public static void last_obj$set(MemorySegment seg, MemorySegment x) {
        constants$431.const$5.set(seg, x);
    }
    public static MemorySegment last_obj$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$431.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void last_obj$set(MemorySegment seg, long index, MemorySegment x) {
        constants$431.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle op$VH() {
        return constants$432.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * H5G_iterate_t op;
     * }
     */
    public static MemorySegment op$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$432.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * H5G_iterate_t op;
     * }
     */
    public static void op$set(MemorySegment seg, MemorySegment x) {
        constants$432.const$0.set(seg, x);
    }
    public static MemorySegment op$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$432.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void op$set(MemorySegment seg, long index, MemorySegment x) {
        constants$432.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static H5G_iterate_t op(MemorySegment segment, Arena scope) {
        return H5G_iterate_t.ofAddress(op$get(segment), scope);
    }
    public static VarHandle op_data$VH() {
        return constants$432.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* op_data;
     * }
     */
    public static MemorySegment op_data$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$432.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* op_data;
     * }
     */
    public static void op_data$set(MemorySegment seg, MemorySegment x) {
        constants$432.const$1.set(seg, x);
    }
    public static MemorySegment op_data$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$432.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void op_data$set(MemorySegment seg, long index, MemorySegment x) {
        constants$432.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


